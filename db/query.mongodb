use("db_bodegas_campus2");
db.createCollection("users",{
    capped: true,
    size: 10000,
    max: 5,
    validator: {
    $jsonSchema: {
        bsonType: "object",
        additionalProperties: false,
        required: [ "nombre", "email", "email_verified_at", "estado","created_by","update_by","password", "created_at", "update_at", "deleted_at"],
        properties: {
            _id:{
                bsonType: 'objectId',
            },
            nombre: {
                bsonType: "string",
                pattern: "^[A-Za-z\\s]+$",
                description: "Debe informar el campo name y este debe ser un string",
            },
            email: {
                bsonType: "string",
                pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]+$",
                description: "Debe informar el campo email y este debe ser un string",
            },
            email_verified_at: {
                bsonType: "date",
                description: "Debe informar el campo address y este debe ser un dato date",
            },
            estado: {
                bsonType: "int",
                minimum: 0,
                maximum: 20,
                description: "El campo created_by debe ser un número y estar comprendido entre 0 y 20"
            },
            created_by: {
                bsonType: "int",
                minimum: 0,
                maximum: 20,
                description: "El campo created_by debe ser un número y estar comprendido entre 0 y 20"
            },
            update_by: {
                bsonType: "int",
                minimum: 0,
                maximum: 20,
                description: "El campo update_by debe ser un número y estar comprendido entre 0 y 20"
            },
            foto: {
                bsonType: "string",
            },
            password: {
                bsonType: "string",
                pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]+$",
                description: "Debe informar el campo password y este debe ser un string",
            },
            created_at: {
                bsonType: "date",
                description: "Debe informar el campo created_at y este debe ser un dato date",
            },
            update_at: {
                bsonType: "date",
                description: "Debe informar el campo update_at y este debe ser un dato date",
            },
            deleted_at: {
                bsonType: "date",
                description: "Debe informar el campo deleted_at y este debe ser un dato date",
            }
        },
    },
    },
});
use("db_bodegas_campus2");
db.users.insertMany([
    {
        nombre:"jose",
        email:"cabre920903@gmail.com",
        email_verified_at: new Date(2023,8,3),
        estado: 1,
        created_by:1,
        update_by:1,
        foto: "",
        password:"casa",
        created_at:new Date(2023,9,3),
        update_at:new Date(2023,10,3),
        deleted_at:new Date(2023,11,3)
    },
    {
        nombre:"carlos",
        email:"carlos@gmail.com",
        email_verified_at: new Date(2023,9,3),
        estado: 2,
        created_by:2,
        update_by:2,
        foto: "",
        password:"sad",
        created_at:new Date(2023,10,3),
        update_at:new Date(2023,11,3),
        deleted_at:new Date(2023,12,3)
    },
    {
        nombre:"raul",
        email:"raul@gmail.com",
        email_verified_at: new Date(2023,9,3),
        estado: 3,
        created_by:3,
        update_by:3,
        foto: "",
        password:"laika",
        created_at:new Date(2023,9,3),
        update_at:new Date(2023,10,3),
        deleted_at:new Date(2023,11,3)
    },
    {
        nombre:"betty",
        email:"betty@gmail.com",
        email_verified_at: new Date(2023,22,3),
        estado: 4,
        created_by:4,
        update_by:4,
        foto: "",
        password:"lolos",
        created_at:new Date(2023,22,3),
        update_at:new Date(2023,23,3),
        deleted_at:new Date(2023,30,3)
    },
    {
        nombre:"lore",
        email:"lore920903@gmail.com",
        email_verified_at: new Date(2023,2,3),
        estado: 5,
        created_by:5,
        update_by:5,
        foto: "",
        password:"werd",
        created_at:new Date(2023,3,3),
        update_at:new Date(2023,21,3),
        deleted_at:new Date(2023,31,3)
    }
]);
use("db_bodegas_campus2");
db.createCollection("productos",{
    capped: true,
    size: 10000,
    max: 5,
    validator: {
    $jsonSchema: {
        bsonType: "object",
        additionalProperties: false,
        required: [ "nombre", "descripcion", "estado","created_by","update_by", "created_at", "update_at", "deleted_at"],
        properties: {
            _id:{
                bsonType: 'objectId',
            },
            nombre: {
                bsonType: "string",
                pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]+$",
                description: "Debe informar el campo name y este debe ser un string",
            },
            descripcion: {
                bsonType: "string",
                pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]+$",
                description: "Debe informar el campo descripcion y este debe ser un string",
            },
            estado: {
                bsonType: "int",
                minimum: 0,
                maximum: 20,
                description: "El campo estado debe ser un número y estar comprendido entre 0 y 20"
            },
            created_by: {
                bsonType: "int",
                minimum: 0,
                maximum: 20,
                description: "El campo created_by debe ser un número y estar comprendido entre 0 y 20"
            },
            update_by: {
                bsonType: "int",
                minimum: 0,
                maximum: 20,
                description: "El campo update_by debe ser un número y estar comprendido entre 0 y 20"
            },
            created_at: {
                bsonType: "date",
                description: "Debe informar el campo address y este debe ser un dato date",
            },
            update_at: {
                bsonType: "date",
                description: "Debe informar el campo address y este debe ser un dato date",
            },
            deleted_at: {
                bsonType: "date",
                description: "Debe informar el campo address y este debe ser un dato date",
            }
        },
    },
    },
});
use("db_bodegas_campus2");
db.productos.insertMany([
    {
        nombre:"producto1",
        descripcion:"productosvarios1",
        estado: 1,
        created_by:1,
        update_by:1,
        created_at:new Date(2023,10,3),
        update_at:new Date(2023,10,3),
        deleted_at:new Date(2023,10,3)
    },
    {
        nombre:"producto2",
        descripcion:"productosvarios2",
        estado: 2,
        created_by:2,
        update_by:2,
        created_at:new Date(2023,11,3),
        update_at:new Date(2023,11,3),
        deleted_at:new Date(2023,11,3)
    },
    {
        nombre:"producto3",
        descripcion:"productosvarios3",
        estado: 3,
        created_by:3,
        update_by:3,
        created_at:new Date(2023,12,3),
        update_at:new Date(2023,12,3),
        deleted_at:new Date(2023,12,3)
    },
    {
        nombre:"producto4",
        descripcion:"productosvarios4",
        estado: 4,
        created_by:4,
        update_by:4,
        created_at:new Date(2023,14,3),
        update_at:new Date(2023,14,3),
        deleted_at:new Date(2023,14,3)
    },
    {
        nombre:"producto5",
        descripcion:"productosvarios5",
        estado: 5,
        created_by:5,
        update_by:5,
        created_at:new Date(2023,15,3),
        update_at:new Date(2023,15,3),
        deleted_at:new Date(2023,15,3)
    }
]);
use("db_bodegas_campus2");
db.createCollection("inventarios",{
    capped: true,
    size: 1900,
    max: 5,
    validator: {
    $jsonSchema: {
        bsonType: "object",
        additionalProperties: false,
        required: [ "id_bodega", "id_producto", "cantidad","created_by","update_by", "created_at", "update_at", "deleted_at"],
        properties: {
            _id:{
                bsonType: 'objectId',
            },
            id_bodega: {
                bsonType: "int",
                minimum: 0,
                maximum: 20,
                description: "El campo id_bodega debe ser un número y estar comprendido entre 0 y 20"
            },
            id_producto: {
                bsonType: "int",
                minimum: 0,
                maximum: 20,
                description: "El campo id_producto debe ser un número y estar comprendido entre 0 y 20"
            },
            cantidad: {
                bsonType: "int",
                minimum: 0,
                maximum: 20,
                description: "El campo cantidad debe ser un número y estar comprendido entre 0 y 20"
            },
            created_by: {
                bsonType: "int",
                minimum: 0,
                maximum: 20,
                description: "El campo created_by debe ser un número y estar comprendido entre 0 y 20"
            },
            update_by: {
                bsonType: "int",
                minimum: 0,
                maximum: 20,
                description: "El campo update_by debe ser un número y estar comprendido entre 0 y 20"
            },
            created_at: {
                bsonType: "date",
                description: "Debe informar el campo address y este debe ser un dato date",
            },
            update_at: {
                bsonType: "date",
                description: "Debe informar el campo address y este debe ser un dato date",
            },
            deleted_at: {
                bsonType: "date",
                description: "Debe informar el campo address y este debe ser un dato date",
            }
        },
    },
    },
});
use("db_bodegas_campus2");
db.inventarios.insertMany([
    {
        id_bodega:1,
        id_producto:1,
        cantidad: 1,
        created_by:1,
        update_by:1,
        created_at:new Date(2023,12,3),
        update_at:new Date(2023,13,3),
        deleted_at:new Date(2023,14,3)
    },
    {
        id_bodega:2,
        id_producto:2,
        cantidad: 2,
        created_by:2,
        update_by:2,
        created_at:new Date(2023,13,3),
        update_at:new Date(2023,14,3),
        deleted_at:new Date(2023,15,3)
    },
    {
        id_bodega:3,
        id_producto:3,
        cantidad: 3,
        created_by:3,
        update_by:3,
        created_at:new Date(2023,14,3),
        update_at:new Date(2023,15,3),
        deleted_at:new Date(2023,16,3)
    },
    {
        id_bodega:4,
        id_producto:4,
        cantidad: 4,
        created_by:4,
        update_by:4,
        created_at:new Date(2023,17,3),
        update_at:new Date(2023,18,3),
        deleted_at:new Date(2023,19,3)
    },
    {
        id_bodega:5,
        id_producto:5,
        cantidad: 5,
        created_by:5,
        update_by:5,
        created_at:new Date(2023,20,3),
        update_at:new Date(2023,21,3),
        deleted_at:new Date(2023,22,3)
    },
]);
use("db_bodegas_campus2");
db.createCollection("historiales",{
    capped: true,
    size: 15000,
    max: 5,
    validator: {
    $jsonSchema: {
        bsonType: "object",
        additionalProperties: false,
        required: [ "cantidad","id_bodega_origen", "id_bodega_destino", "id_inventario" ,"estado","created_by","update_by", "created_at", "update_at", "deleted_at"],
        properties: {
            _id:{
                bsonType: 'objectId',
            },
            cantidad: {
                bsonType: "int",
                minimum: 0,
                maximum: 20,
                description: "El campo cantidad debe ser un número y estar comprendido entre 0 y 20"
            },
            id_bodega_origen: {
                bsonType: "int",
                minimum: 0,
                maximum: 20,
                description: "El campo id_bodega debe ser un número y estar comprendido entre 0 y 20"
            },
            id_bodega_destino: {
                bsonType: "int",
                minimum: 0,
                maximum: 20,
                description: "El campo id_producto debe ser un número y estar comprendido entre 0 y 20"
            },
            id_inventario: {
                bsonType: "int",
                minimum: 0,
                maximum: 20,
                description: "El campo id_producto debe ser un número y estar comprendido entre 0 y 20"
            },
            estado: {
                bsonType: "int",
                minimum: 0,
                maximum: 20,
                description: "El campo cantidad debe ser un número y estar comprendido entre 0 y 20"
            },
            created_by: {
                bsonType: "int",
                minimum: 0,
                maximum: 20,
                description: "El campo created_by debe ser un número y estar comprendido entre 0 y 20"
            },
            update_by: {
                bsonType: "int",
                minimum: 0,
                maximum: 20,
                description: "El campo update_by debe ser un número y estar comprendido entre 0 y 20"
            },
            created_at: {
                bsonType: "date",
                description: "Debe informar el campo address y este debe ser un dato date",
            },
            update_at: {
                bsonType: "date",
                description: "Debe informar el campo address y este debe ser un dato date",
            },
            deleted_at: {
                bsonType: "date",
                description: "Debe informar el campo address y este debe ser un dato date",
            }
        },
    },
    },
});
use("db_bodegas_campus2");
db.historiales.insertMany([
    {
        cantidad: 20,
        id_bodega_origen: 5,
        id_bodega_destino: 3,
        id_inventario: 1,
        estado:1,
        created_by: 1,
        update_by: 2,
        created_at: new Date(2022,6,2),
        update_at: new Date(2022,6,2),
        deleted_at: new Date(2022,6,2)
    },
    {
        cantidad: 2,
        id_bodega_origen: 5,
        id_bodega_destino: 8,
        id_inventario: 2,
        estado:2,
        created_by: 2,
        update_by: 2,
        created_at: new Date(2022,6,3),
        update_at: new Date(2022,6,3),
        deleted_at: new Date(2022,6,3)
    },
    {
        cantidad: 2,
        id_bodega_origen: 2,
        id_bodega_destino: 15,
        id_inventario: 3,
        estado:3,
        created_by: 3,
        update_by: 3,
        created_at: new Date(2022,6,4),
        update_at: new Date(2022,6,4),
        deleted_at: new Date(2022,6,4)
    },
    {
        cantidad: 2,
        id_bodega_origen: 12,
        id_bodega_destino: 9,
        id_inventario: 4,
        estado:4,
        created_by: 4,
        update_by: 4,
        created_at: new Date(2022,6,5),
        update_at: new Date(2022,6,5),
        deleted_at: new Date(2022,6,5)
    },
    {
        cantidad: 2,
        id_bodega_origen: 7,
        id_bodega_destino: 6,
        id_inventario: 5,
        estado:5,
        created_by: 5,
        update_by: 5,
        created_at: new Date(2022,6,6),
        update_at: new Date(2022,6,6),
        deleted_at: new Date(2022,6,6)
    }]);
use("db_bodegas_campus2");
db.createCollection("bodegas",{
    capped: true,
    size: 1900,
    max: 5,
    validator: {
    $jsonSchema: {
        bsonType: "object",
        additionalProperties: false,
        required: [ "nombre","id_responsable","estado","created_by","update_by", "created_at", "update_at", "deleted_at"],
        properties: {
            _id:{
                bsonType: 'objectId',
            },
            nombre: {
                bsonType: "string",
                pattern: "^[a-zA-Z0-9áéíóúÁÉÍÓÚñÑüÜ,.#@\\s-]+$",
                description: "Debe informar el campo name y este debe ser un string",
            },
            id_responsable: {
                bsonType: "int",
                minimum: 0,
                maximum: 20,
                description: "El campo id_producto debe ser un número y estar comprendido entre 0 y 20"
            },
            estado: {
                bsonType: "int",
                minimum: 0,
                maximum: 20,
                description: "El campo cantidad debe ser un número y estar comprendido entre 0 y 20"
            },
            created_by: {
                bsonType: "int",
                minimum: 0,
                maximum: 20,
                description: "El campo created_by debe ser un número y estar comprendido entre 0 y 20"
            },
            update_by: {
                bsonType: "int",
                minimum: 0,
                maximum: 20,
                description: "El campo update_by debe ser un número y estar comprendido entre 0 y 20"
            },
            created_at: {
                bsonType: "date",
                description: "Debe informar el campo address y este debe ser un dato date",
            },
            update_at: {
                bsonType: "date",
                description: "Debe informar el campo address y este debe ser un dato date",
            },
            deleted_at: {
                bsonType: "date",
                description: "Debe informar el campo address y este debe ser un dato date",
            }
        },
    },
    },
});
use("db_bodegas_campus2");
db.bodegas.insertMany([
    {
        nombre:"Bodega1",
        id_responsable:1,
        estado: 1,
        created_by:1,
        update_by:1,
        created_at:new Date(2023,16,3),
        update_at:new Date(2023,17,3),
        deleted_at:new Date(2023,18,3),
    },
    {
        nombre:"Bodega2",
        id_responsable:2,
        estado: 2,
        created_by:2,
        update_by:2,
        created_at:new Date(2023,17,3),
        update_at:new Date(2023,18,3),
        deleted_at:new Date(2023,19,3),
    },
    {
        nombre:"Bodega3",
        id_responsable:3,
        estado: 3,
        created_by:3,
        update_by:3,
        created_at:new Date(2023,20,3),
        update_at:new Date(2023,21,3),
        deleted_at:new Date(2023,22,3),
    },
    {
        nombre:"Bodega4",
        id_responsable:4,
        estado: 4,
        created_by:4,
        update_by:4,
        created_at:new Date(2023,23,3),
        update_at:new Date(2023,24,3),
        deleted_at:new Date(2023,25,3),
    },
    {
        nombre:"Bodega5",
        id_responsable:5,
        estado: 5,
        created_by:5,
        update_by:5,
        created_at:new Date(2023,26,3),
        update_at:new Date(2023,27,3),
        deleted_at:new Date(2023,28,3),
    }
]);

/* 
? Consultas 
*/
/* 
? EndPoint bodegas ordenadas alfabeticamente
*/
use("db_bodegas_campus2");
db.bodegas.find({}).sort({ nombre: 1 });
/* 
? EndPoint productos por su total
*/
use("db_bodegas_campus2");
db.productos.aggregate([
    {
        $lookup: {
            from: "inventarios",
            localField: "_id",
            foreignField: "id_producto",
            as: "inventory"
        }
    },
    {
        $unwind: "$inventory"
    },
    {
        $group: {
            _id: "$_id",
            Total: { $sum: "$inventory.cantidad" },
            producto: { $first: "$$ROOT" }
        }
    },
    {    
        $project: {     
            "producto.inventory": 0
        } 
    },
    {
        $match: {
            Total: { $gt: 1 } // Filtra productos con una cantidad total de inventario mayor a 1
        }
    },
    {
        $sort: { Total: -1 }
    }
]);



/* 
? EndPoint para agregar productos y que se guarden en inventario con valores de cantidad y bodega por defecto:
*/
use("db_bodegas_campus2");
db.inventarios.insertOne({
    id_bodega: 1, // ID de la bodega predeterminada
    id_producto: nuevoProductoId,
    cantidad: 10, // Cantidad predeterminada
    created_by: 1,
    update_by: 1,
    created_at: "2023-08-16",
    update_at: "2023-08-16",
    deleted_at: "",
});
/*  
? EndPoint para agegar registros en la tabla de inventarios. En este caso si la combinación producto-bodega no existe añade un nuevo registro al inventario. Pero si existe actualiza la cantidad.
*/
use("db_bodegas_campus2");
var nuevoInventario = {
    id_bodega: 1, // ID de la bodega
    id_producto: 1, // ID del producto
    cantidad: 5, // Cantidad a agregar o actualizar
    created_by: 1,
    update_by: 1,
    created_at: "2023-08-16",
    update_at: "2023-08-16",
    deleted_at: "",
};
var filtro = {
    id_bodega: nuevoInventario.id_bodega,
    id_producto: nuevoInventario.id_producto,
};
db.inventarios.updateOne(
    filtro,
    {
        $set: {
            id_bodega: nuevoInventario.id_bodega,
            id_producto: nuevoInventario.id_producto,
            update_by: nuevoInventario.update_by,
            update_at: nuevoInventario.update_at,
            deleted_at: nuevoInventario.deleted_at,
        },
        $inc: {
            cantidad: nuevoInventario.cantidad,
        },
        $setOnInsert: {
            created_by: nuevoInventario.created_by,
            created_at: nuevoInventario.created_at,
        },
    },
    { upsert: true }
);
/*  
? Este endPoint permite trasladar un producto de una bodega a otra. Además agregá automaticamente al historial toda la información de la transacción
*/

